"use strict";(self.webpackChunkcaesar_website=self.webpackChunkcaesar_website||[]).push([[7256],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||s;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,o=new Array(s);o[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[u]="string"==typeof e?e:i,o[1]=a;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},136:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const s={sidebar_position:3},o="Lists",a={unversionedId:"stdlib/lists",id:"stdlib/lists",title:"Lists",description:"The standard library includes a type for lists []T where T is the type of elements.",source:"@site/docs/stdlib/lists.md",sourceDirName:"stdlib",slug:"/stdlib/lists",permalink:"/docs/stdlib/lists",draft:!1,editUrl:"https://github.com/moves-rwth/caesar/tree/main/website/docs/stdlib/lists.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Number Types",permalink:"/docs/stdlib/numbers"},next:{title:"Distribution Expressions",permalink:"/docs/stdlib/distributions"}},l={},c=[{value:"Discussion",id:"discussion",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lists"},"Lists"),(0,i.kt)("p",null,"The standard library includes a type for lists ",(0,i.kt)("inlineCode",{parentName:"p"},"[]T")," where ",(0,i.kt)("inlineCode",{parentName:"p"},"T")," is the type of elements."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Length"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"func len(list: []T): UInt"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Element Access"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"func select(list: []T, index: UInt): T"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Storing elements"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"func store(list: []T, index: UInt, value: T): []T"),".")),(0,i.kt)("h2",{id:"discussion"},"Discussion"),(0,i.kt)("p",null,"The SMT-LIB translation of lists is based on SMT-LIB's arrays, but our lists have a length associated with it.\nYou are only supposed to access elements at indices ",(0,i.kt)("inlineCode",{parentName:"p"},"< len(list)"),"."),(0,i.kt)("p",null,"Some SMT solvers also support ",(0,i.kt)("a",{parentName:"p",href:"https://microsoft.github.io/z3guide/docs/theories/Sequences"},"Sequences"),", but we do not yet understand those well enough to say how they compare to our lists."))}d.isMDXComponent=!0}}]);