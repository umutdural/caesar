"use strict";(self.webpackChunkcaesar_website=self.webpackChunkcaesar_website||[]).push([[4195],{9114:(e,t,l)=>{l.d(t,{Z:()=>r});var a=l(7294);function n(){return n=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a])}return e},n.apply(this,arguments)}const r=e=>{let{title:t,titleId:l,...r}=e;return a.createElement("svg",n({viewBox:"0 0 2084 1042",xmlns:"http://www.w3.org/2000/svg",xmlSpace:"preserve",style:{fillRule:"evenodd",clipRule:"evenodd",strokeLinejoin:"round",strokeMiterlimit:2},"aria-labelledby":l},r),t?a.createElement("title",{id:l},t):null,a.createElement("text",{x:355.557,y:727.687,style:{fontFamily:"'Papyrus',sans-serif",fontSize:"633.237px"}},"E(X)"))}},8488:(e,t,l)=>{l.d(t,{Z:()=>i});var a,n,r=l(7294);function c(){return c=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a])}return e},c.apply(this,arguments)}const i=e=>{let{title:t,titleId:l,...i}=e;return r.createElement("svg",c({viewBox:"0 0 417 209",xmlns:"http://www.w3.org/2000/svg",xmlSpace:"preserve",style:{fillRule:"evenodd",clipRule:"evenodd",strokeLinejoin:"round",strokeMiterlimit:2},"aria-labelledby":l},i),t?r.createElement("title",{id:l},t):null,r.createElement("text",{x:70.094,y:149.39,style:{fontFamily:"'MarkerFelt-Thin','Marker Felt'",fontSize:"104.112px"}},"H",a||(a=r.createElement("tspan",{x:"125.377px 170.874px",y:"149.39px 149.39px"},"ey"))),r.createElement("text",{x:259.689,y:124.738,style:{fontFamily:"'MarkerFelt-Thin','Marker Felt'",fontSize:"108.687px",fill:"#3d3d3d"},transform:"rotate(15.043 251.039 -43.945)"},"!"),r.createElement("text",{x:238.597,y:156.886,style:{fontFamily:"'MarkerFelt-Thin','Marker Felt'",fontSize:"104.112px"}},"V",n||(n=r.createElement("tspan",{x:299.19,y:156.886},"L"))))}},4826:(e,t,l)=>{l.d(t,{Z:()=>c});var a,n=l(7294);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a])}return e},r.apply(this,arguments)}const c=e=>{let{title:t,titleId:l,...c}=e;return n.createElement("svg",r({viewBox:"0 0 428 209",xmlns:"http://www.w3.org/2000/svg",xmlSpace:"preserve",style:{fillRule:"evenodd",clipRule:"evenodd",strokeLinejoin:"round",strokeMiterlimit:2},"aria-labelledby":l},c),t?n.createElement("title",{id:l},t):null,n.createElement("path",{d:"M312.284 30.28h4.989c2.202 0 3.513.358 4.536 1.579 1.569 1.882 1.708 5.687 1.708 13.354v13.369c0 7.669-.139 11.469-1.708 13.354-1.023 1.22-2.334 1.576-4.536 1.576h-4.989V30.28Zm-7.785 49.831h14.14c5.493 0 8.843-1.248 10.874-3.877 2.999-3.591 3.094-9.384 3.094-18.272v-12.13c0-8.884-.095-14.681-3.094-18.271-2.031-2.63-5.381-3.879-10.874-3.879h-14.14c-.422 0-.685.128-.869.314-.189.189-.316.445-.316.873v54.06c0 .423.127.683.316.869.184.187.447.313.869.313ZM383.618 80.824c5.556 0 9.137-1.487 11.34-4.046 2.586-3.005 3.223-6.589 3.223-11.986V24.869c0-.428-.13-.684-.32-.873-.18-.186-.442-.314-.863-.314h-6.612c-.422 0-.683.128-.869.314-.184.189-.315.445-.315.873v39.909c0 4.165-.313 6.642-1.669 8.129-.918 1.006-2.213 1.5-4.036 1.5-1.645 0-2.902-.459-3.855-1.509-1.279-1.41-1.672-3.804-1.672-8.12V24.869c0-.428-.125-.684-.314-.873-.187-.186-.445-.314-.871-.314h-6.605c-.428 0-.685.128-.874.314-.188.189-.309.445-.309.873v39.923c0 5.811.788 9.456 3.098 11.992 2.399 2.641 6.024 4.04 11.523 4.04ZM337.424 30.814h8.492v48.115c0 .423.121.683.31.869.187.187.445.313.87.313h7.229c.425 0 .683-.126.868-.313.19-.186.315-.446.315-.869V30.814h8.49c.424 0 .682-.125.875-.312.183-.186.311-.447.311-.869v-4.764c0-.428-.128-.684-.311-.873-.193-.186-.451-.314-.875-.314h-26.574c-.427 0-.685.128-.874.314-.188.189-.315.445-.315.873v4.764c0 .422.127.683.315.869.189.187.447.312.874.312ZM381.498 120.248l22.669-11.897-22.669-11.906c-29.36 11.423-31.834 11.423-61.188 0l-22.668 11.906 22.668 11.897c29.354-11.417 31.828-11.417 61.188 0ZM320.31 125.862l-22.668 11.902 22.668 11.897c29.354-11.417 31.828-11.417 61.188 0l22.669-11.897-22.669-11.902c-29.36 11.42-31.834 11.42-61.188 0ZM320.31 155.278l-22.668 11.897 22.668 11.9c29.354-11.418 31.828-11.418 61.188 0l22.669-11.9-22.669-11.897c-29.36 11.417-31.834 11.417-61.188 0Z",style:{fill:"#bf2f38",fillRule:"nonzero"}}),a||(a=n.createElement("clipPath",{id:"a"},n.createElement("path",{d:"M15.762 10.417h242.487v65.762H15.762z"}))),n.createElement("g",{clipPath:"url(#a)"},n.createElement("path",{style:{fill:"none"},d:"M15.091 9.746H258.92V76.85H15.091z"}),n.createElement("path",{d:"M26.817 41.83H16.632V11.218h16.7c4.53-.001 8.435 2.931 9.71 6.818 1.181 3.601.172 7.515-2.492 10.299.354.96.699 1.71 1.028 2.572.739 1.705 1.417 3.409 2.156 5.093l2.423 5.83H35.829c0 .005-.083-.246-.165-.348-.41-.904-.779-1.869-1.19-2.773l-2.484-5.892c-.985-2.382-1.971-4.632-2.957-7.014 1.231-.033 2.15.197 3.338-.348.833-.411 2.098-1.431 2.13-3.387-.032-.97-.3-1.704-.941-2.467a3.752 3.752 0 0 0-2.786-1.254s-3.959-.002-3.957 0V41.83Zm106.381-30.607h-10.186v11.045h-7.13V11.223H74.675v13.756c.082.636.226 1.273.287 1.93l-2.751-6.262c-1.232-2.875-2.402-5.749-3.634-8.644-.103-.267-.176-.446-.309-.78H57.756c0 1.498.021 3.161 0 4.619v9.137c.103.575.288 1.334.371 1.93l-.062-.123a747.649 747.649 0 0 1-6.59-15.563H40.987c.205.616.534 1.17.74 1.786l2.316 5.426 1.616 3.798.103.231c.744 1.77 1.332 3.158 2.054 4.861 2.079 4.917 4.08 9.665 6.164 14.51h10.512V25.821c.267.903.473 1.827.678 2.751 1.786 4.393 3.717 8.849 5.543 13.263h10.492V18.307h7.185v23.528h10.186V18.307h7.122v23.528h4.497c1.849-.02 3.841 0 5.688 0V29.352h7.13v12.483h10.185V11.223Z",style:{fill:"#00549f"}}),n.createElement("path",{d:"M169.392 11.375h-7.597l-6.359 24.024-6.36-24.024h-7.598l-8.066 30.476h6.403l1.408-6.445h8.11l1.409 6.445h9.389l1.408-6.445h8.111l1.408 6.445h6.403l-8.069-30.476ZM142.29 30.369l2.946-13.701h.085l2.945 13.701h-5.976Zm20.316 0 2.946-13.701h.086l2.943 13.701h-5.975Zm27.017-8.707c0-4.44-.896-6.36-3.671-6.36-3.116 0-3.842 3.116-3.842 11.737 0 9.221 1.281 10.885 3.927 10.885 2.221 0 3.841-1.152 3.841-7.726h6.148c0 6.574-1.623 12.251-9.689 12.251-9.221 0-10.372-6.574-10.372-15.836 0-9.263 1.151-15.836 10.372-15.836 8.793 0 9.432 6.445 9.432 10.885h-6.146Zm7.338-10.287h6.145v11.652h7.172V11.375h6.146v30.476h-6.146V28.32h-7.172v13.531h-6.145V11.375Zm38.199 0v5.036h-10.884v7.171h10.242v5.037h-10.242v8.195h11.311v5.037h-17.459V11.375h17.032Zm8.881 0 7.426 20.872h.085V11.375h5.634v30.476h-7.001l-7.51-21.342h-.088v21.342h-5.633V11.375h7.087ZM177.576 49.127h2.904c2.774 0 4.267 1.409 4.267 4.225 0 3.288-1.664 4.569-4.61 4.569h-2.561v-8.794ZM171.43 75.08h6.146V62.189h3.287c2.475 0 3.542 1.45 3.629 3.84l.17 5.848c.042 1.196.169 2.349.769 3.203h6.657v-.257c-1.152-.597-1.323-2.262-1.366-5.464-.085-6.444-.724-8.749-4.907-9.306v-.084c3.456-.727 5.078-3.458 5.078-7.513 0-5.207-3.073-7.853-8.109-7.853H171.43V75.08ZM80.998 44.603v21.256c0 8.153 4.739 9.818 9.732 9.818 4.994 0 9.732-2.05 9.732-9.818V44.603h-6.147v21.256c0 3.031-.725 5.293-3.585 5.293s-3.585-2.262-3.585-5.293V44.603h-6.147Zm20.781 0V75.08h5.634V53.737h.086l7.513 21.343h7V44.603h-5.635v20.872h-.085l-7.427-20.872h-7.086Zm27.959 0h-6.146V75.08h6.146V44.603Zm.422 0 7.001 30.477h7.896l7.001-30.477h-6.36l-4.527 22.537h-.126l-4.311-22.537h-6.574Zm22.444 0V75.08h17.459v-5.038H158.75v-8.195h10.245V56.81H158.75v-7.171h10.886v-5.036h-17.032Zm38.801 20.957v1.238c0 5.635 2.732 8.879 9.688 8.879 6.66 0 10.585-2.903 10.585-9.348 0-3.714-1.194-6.06-5.804-8.068l-4.738-2.047c-2.605-1.112-3.159-2.263-3.159-4.141 0-1.793.727-3.543 3.501-3.543 2.347 0 3.328 1.666 3.328 4.525h5.891v-.854c0-5.848-3.968-8.195-9.435-8.195-5.802 0-9.431 3.031-9.431 8.964 0 5.079 2.518 7.341 7.981 9.219 4.055 1.408 5.464 2.432 5.464 5.208 0 2.559-1.793 3.756-3.671 3.756-3.244 0-4.055-1.835-4.055-4.697v-.896h-6.145Zm27.224-20.957h-6.147V75.08h6.147V44.603Zm31.924 0-4.267 11.78h-.085l-4.013-11.78h-22.753v5.036h6.659V75.08h6.146V49.639h5.185l5.745 13.446V75.08h6.147V63.085l7.896-18.482h-6.66Z",style:{fill:"#8ebae5"}})),n.createElement("path",{d:"M252.908 184.613c-2.186 0-3.847-.464-5.262-1.901l1.822-1.821c.91.908 2.144 1.214 3.479 1.214 1.66 0 2.552-.629 2.552-1.782 0-.505-.142-.93-.447-1.214-.283-.263-.606-.404-1.273-.506l-1.742-.242c-1.234-.182-2.145-.567-2.792-1.196-.688-.688-1.032-1.619-1.032-2.833 0-2.569 1.901-4.371 5.017-4.371 1.984 0 3.421.487 4.658 1.68l-1.784 1.761c-.91-.871-2.002-.992-2.955-.992-1.497 0-2.225.83-2.225 1.821 0 .365.122.75.424 1.032.286.264.752.487 1.338.567l1.698.243c1.317.181 2.148.546 2.753 1.113.77.729 1.112 1.78 1.112 3.056 0 2.792-2.326 4.371-5.341 4.371M235.91 184.493v-14.412h9.494v2.51h-6.682v3.382h5.688v2.51h-5.688v3.501h6.682v2.509h-9.494ZM228.962 173.481c-.485-.585-1.133-.89-2.103-.89h-2.127v9.392h2.127c.97 0 1.618-.305 2.103-.891.528-.647.609-1.68.609-3.865 0-2.186-.081-3.097-.609-3.746m1.965 9.635c-.953.952-2.309 1.377-3.807 1.377h-5.201v-14.412h5.201c1.498 0 2.854.426 3.807 1.377 1.617 1.618 1.456 3.604 1.456 5.769 0 2.166.161 4.27-1.456 5.889M214.836 184.493l-5.706-8.845v8.845h-2.813v-14.412h2.509l5.706 8.826v-8.826h2.814v14.412h-2.51ZM197.434 174.332l-1.821 5.242h3.582l-1.761-5.242Zm3.36 10.161-.852-2.551h-5.12l-.87 2.551h-2.934l5.242-14.412h2.205l5.262 14.412h-2.933ZM180.151 184.493v-14.412h2.814v11.903h6.536v2.509h-9.35ZM171.566 172.591h-2.651v3.806h2.651c1.234 0 2.044-.789 2.044-1.902 0-1.112-.81-1.904-2.044-1.904m2.187 11.902-2.813-5.75h-2.025v5.75h-2.814v-14.412h5.648c2.936 0 4.675 2.005 4.675 4.414 0 2.023-1.236 3.278-2.631 3.784l3.217 6.214h-3.257ZM157.22 174.332l-1.821 5.242h3.58l-1.759-5.242Zm3.358 10.161-.849-2.551h-5.12l-.871 2.551h-2.935l5.242-14.412h2.207l5.26 14.412h-2.934ZM143.093 174.332l-1.821 5.242h3.582l-1.761-5.242Zm3.36 10.161-.85-2.551h-5.12l-.869 2.551h-2.937l5.242-14.412h2.207l5.261 14.412h-2.934ZM129.447 184.613c-2.184 0-3.844-.464-5.262-1.901l1.822-1.821c.911.908 2.146 1.214 3.482 1.214 1.658 0 2.551-.629 2.551-1.782 0-.505-.144-.93-.448-1.214-.281-.263-.607-.404-1.274-.506l-1.74-.242c-1.234-.182-2.145-.567-2.794-1.196-.688-.688-1.031-1.619-1.031-2.833 0-2.569 1.903-4.371 5.018-4.371 1.985 0 3.421.487 4.655 1.68l-1.78 1.761c-.911-.871-2.004-.992-2.955-.992-1.498 0-2.226.83-2.226 1.821 0 .365.12.75.425 1.032.282.264.748.487 1.335.567l1.7.243c1.316.181 2.145.546 2.753 1.113.769.729 1.113 1.78 1.113 3.056 0 2.792-2.327 4.371-5.344 4.371M155.618 160.326c-2.187 0-3.846-.465-5.263-1.902l1.821-1.822c.911.911 2.145 1.215 3.482 1.215 1.66 0 2.55-.627 2.55-1.781 0-.505-.143-.931-.445-1.214-.285-.264-.608-.406-1.276-.508l-1.739-.24c-1.237-.184-2.147-.568-2.794-1.195-.688-.689-1.033-1.62-1.033-2.833 0-2.57 1.902-4.371 5.02-4.371 1.984 0 3.421.484 4.656 1.681l-1.782 1.759c-.91-.87-2.004-.991-2.955-.991-1.497 0-2.227.828-2.227 1.821 0 .363.122.748.426 1.033.283.261.749.484 1.337.566l1.697.242c1.317.182 2.147.547 2.754 1.113.769.73 1.112 1.78 1.112 3.056 0 2.793-2.327 4.371-5.341 4.371M138.596 160.206v-14.41h9.492v2.508h-6.678v3.38h5.687v2.51h-5.687v3.502h6.678v2.51h-9.492ZM131.66 149.196c-.486-.586-1.133-.891-2.106-.891h-2.124v9.391h2.124c.973 0 1.62-.305 2.106-.89.526-.649.607-1.681.607-3.865 0-2.185-.081-3.096-.607-3.745m1.964 9.633c-.952.951-2.308 1.378-3.806 1.378h-5.201v-14.411h5.201c1.498 0 2.854.424 3.806 1.376 1.617 1.619 1.455 3.602 1.455 5.769 0 2.164.162 4.27-1.455 5.888M250.381 124.017v11.9h-2.814v-11.9h-3.762v-2.509h10.34v2.509h-3.764ZM238.212 117.544h2.248v2.531h-2.248v-2.531Zm-1.01 8.218-1.822 5.241h3.581l-1.759-5.241Zm-3.462-8.218h2.246v2.531h-2.246v-2.531Zm6.821 18.378-.85-2.551h-5.119l-.873 2.551h-2.934l5.243-14.41h2.205l5.262 14.41h-2.934ZM226.72 124.017v11.9h-2.813v-11.9h-3.765v-2.509h10.343v2.509h-3.765ZM214.231 121.508h2.812v14.41h-2.812zM205.426 136.044c-2.186 0-3.845-.466-5.261-1.903l1.822-1.822c.91.911 2.143 1.215 3.481 1.215 1.658 0 2.549-.628 2.549-1.781 0-.507-.141-.931-.446-1.215-.281-.263-.606-.404-1.273-.505l-1.741-.242c-1.234-.184-2.145-.568-2.795-1.196-.686-.687-1.031-1.619-1.031-2.833 0-2.569 1.904-4.371 5.018-4.371 1.986 0 3.421.485 4.655 1.679l-1.779 1.761c-.912-.87-2.005-.992-2.956-.992-1.498 0-2.227.83-2.227 1.822 0 .363.124.748.427 1.031.283.265.747.487 1.335.568l1.699.243c1.316.182 2.148.546 2.754 1.112.768.73 1.112 1.781 1.112 3.057 0 2.792-2.325 4.372-5.343 4.372M192.878 124.017h-2.653v3.805h2.653c1.234 0 2.044-.79 2.044-1.902 0-1.114-.81-1.903-2.044-1.903m2.184 11.9-2.814-5.748h-2.023v5.748h-2.812v-14.409h5.646c2.933 0 4.675 2.002 4.675 4.412 0 2.023-1.234 3.277-2.631 3.784l3.219 6.213h-3.26ZM174.361 135.919v-14.41h9.49v2.51h-6.678v3.38h5.687v2.509h-5.687v3.502h6.678v2.509h-9.49ZM167.235 135.919h-2.106l-4.755-14.41h2.914l2.895 9.391 2.894-9.391h2.935l-4.777 14.41ZM155.013 121.508h2.813v14.41h-2.813zM147.929 135.919l-5.707-8.844v8.844h-2.815v-14.41h2.51l5.707 8.823v-8.823h2.813v14.41h-2.508ZM130.159 136.044c-2.954 0-5.303-2.004-5.303-5.061v-9.471h2.814v9.37c0 1.66.97 2.652 2.489 2.652 1.517 0 2.51-.992 2.51-2.652v-9.37h2.792v9.471c0 3.057-2.347 5.061-5.302 5.061M102.322 126.924v57.925h-3.864c-7.228 0-13.881-3.418-17.502-6.858v9.997h8.979l3.696 7.111h-1.708l-3.889-2.717h-5.045l1.797 1.944.619 5.593h-1.536l-6.926-7.537H65.952l-2.386 2.717h-1.533l1.868-7.111h9.003l-4.859-5.284H49.938l-4.859 5.284h9.003l1.87 7.111h-1.536l-2.385-2.717H41.038l-6.928 7.538h-1.533l.619-5.591 1.797-1.947h-5.044l-3.887 2.717h-1.71l3.699-7.111h9.07V178c-3.623 3.437-10.273 6.849-17.493 6.849h-3.866v-57.925c0-4.884 3.87-7.622 8.71-7.622 6.012 0 10.41 4.233 12.955 8.458l2.065-24.984h9.901l3.921 5.566h11.05c.913-1.285 3.964-5.566 3.964-5.566h9.665l2.6 25.092c2.537-4.26 6.953-8.566 13.016-8.566 4.842 0 8.713 2.738 8.713 7.622",style:{fill:"#10427a",fillRule:"nonzero"}}),n.createElement("path",{d:"M86.308 131.576a1.026 1.026 0 0 0-2.054 0v32.606c0 .392-.282.712-.629.712-.347 0-.63-.32-.63-.712v-28.216a1.026 1.026 0 1 0-2.054 0v33.708c0 1.526 1.203 2.768 2.684 2.768s2.683-1.242 2.683-2.768v-38.098ZM95.368 127.85a1.027 1.027 0 0 0-2.056 0v35.757c0 .391-.28.713-.63.713-.344 0-.628-.322-.628-.713v-36.471a1.027 1.027 0 0 0-2.053 0v46.574c0 1.524 1.203 2.767 2.681 2.767 1.481 0 2.686-1.243 2.686-2.767v-45.86ZM75.32 160.533a1.026 1.026 0 1 0-2.054 0v6.651c0 .393-.282.713-.629.713-.345 0-.63-.32-.63-.713v-6.651a1.026 1.026 0 1 0-2.051 0v12.029c0 1.527 1.203 2.767 2.681 2.767 1.481 0 2.683-1.24 2.683-2.767v-12.029ZM66.267 163.28a1.028 1.028 0 0 0-2.055 0v6.653c0 .394-.281.714-.629.714-.347 0-.629-.32-.629-.714v-6.653a1.027 1.027 0 0 0-2.055 0v12.03c0 1.527 1.203 2.767 2.684 2.767 1.479 0 2.684-1.24 2.684-2.767v-12.03ZM56.734 163.28a1.026 1.026 0 1 0-2.054 0v6.653c0 .394-.282.714-.629.714-.345 0-.63-.32-.63-.714v-6.653a1.026 1.026 0 1 0-2.054 0v12.03c0 1.527 1.205 2.767 2.684 2.767 1.481 0 2.683-1.24 2.683-2.767v-12.03ZM47.678 160.533a1.029 1.029 0 0 0-2.056 0v6.651c0 .393-.281.713-.628.713-.346 0-.631-.32-.631-.713v-6.651a1.026 1.026 0 1 0-2.052 0v12.029c0 1.527 1.203 2.767 2.683 2.767 1.479 0 2.684-1.24 2.684-2.767v-12.029ZM75.32 141.49a1.028 1.028 0 0 0-2.054 0v6.653c0 .393-.282.712-.629.712-.345 0-.63-.319-.63-.712v-6.653a1.026 1.026 0 1 0-2.051 0v12.03c0 1.527 1.203 2.767 2.681 2.767 1.481 0 2.683-1.24 2.683-2.767v-12.03ZM66.267 144.239a1.027 1.027 0 0 0-2.055 0v6.653c0 .394-.281.714-.629.714-.347 0-.629-.32-.629-.714v-6.653a1.026 1.026 0 0 0-2.055 0v12.032c0 1.524 1.203 2.767 2.684 2.767 1.479 0 2.684-1.243 2.684-2.767v-12.032ZM56.734 144.239a1.027 1.027 0 0 0-2.054 0v6.653c0 .394-.282.714-.629.714-.345 0-.63-.32-.63-.714v-6.653a1.027 1.027 0 0 0-2.054 0v12.032c0 1.524 1.205 2.767 2.684 2.767 1.481 0 2.683-1.243 2.683-2.767v-12.032ZM47.678 141.49a1.028 1.028 0 0 0-2.056 0v6.653c0 .393-.281.712-.628.712-.346 0-.631-.319-.631-.712v-6.653a1.026 1.026 0 1 0-2.052 0v12.03c0 1.527 1.203 2.767 2.683 2.767 1.479 0 2.684-1.24 2.684-2.767v-12.03ZM31.739 169.684c0 1.526 1.205 2.767 2.686 2.767 1.479 0 2.682-1.241 2.682-2.767v-33.71c0-.566-.46-1.024-1.026-1.024-.569 0-1.028.458-1.028 1.024v28.216c0 .394-.283.714-.628.714-.35 0-.63-.32-.63-.714v-32.606a1.027 1.027 0 0 0-2.056 0v38.1ZM22.683 173.717c0 1.523 1.203 2.766 2.684 2.766 1.48 0 2.683-1.243 2.683-2.766v-46.575a1.028 1.028 0 0 0-2.054 0v36.471c0 .391-.283.712-.629.712-.347 0-.629-.321-.629-.712v-35.758c0-.567-.459-1.026-1.029-1.026-.567 0-1.026.459-1.026 1.026v45.862ZM58.89 128.265l-2.629 1.974 2.629 5.925 2.679-5.925-2.679-1.974ZM75.48 121.567a7.835 7.835 0 1 1-15.67 0 7.835 7.835 0 0 1 15.67 0",style:{fill:"#fff",fillRule:"nonzero"}}),n.createElement("path",{d:"M73.594 121.567a5.944 5.944 0 0 1-5.945 5.945 5.945 5.945 0 1 1 5.945-5.945",style:{fill:"#10427a",fillRule:"nonzero"}}),n.createElement("path",{d:"M71.075 121.567a3.427 3.427 0 1 1-6.855 0 3.427 3.427 0 0 1 6.855 0M58.014 121.567a7.833 7.833 0 1 1-15.664 0 7.833 7.833 0 1 1 15.664 0",style:{fill:"#fff",fillRule:"nonzero"}}),n.createElement("path",{d:"M56.126 121.567a5.945 5.945 0 1 1-11.888 0 5.945 5.945 0 0 1 11.888 0",style:{fill:"#10427a",fillRule:"nonzero"}}),n.createElement("path",{d:"M53.609 121.567a3.427 3.427 0 1 1-6.853 0 3.427 3.427 0 0 1 6.853 0",style:{fill:"#fff",fillRule:"nonzero"}}))}},3261:(e,t,l)=>{l.r(t),l.d(t,{default:()=>f});var a=l(7294),n=l(6010),r=l(9960),c=l(2263),i=l(1155),o=l(7462);const s={features:"features_t9lD",featureSvg:"featureSvg_GfXr",invertDark:"invertDark_jaEU"};var h=l(614);const v=[{title:"Expectation-Based Reasoning",Svg:l(9114).Z,alt:"E(X)",description:a.createElement(a.Fragment,null,"Our approach is based on ",a.createElement("i",null,"weakest precondition-style reasoning"),", generalized to probabilistic programs. We can reason about lower and upper bounds of expected values."),invertDark:!0},{title:"A Quantitative Intermediate Verification Language",Svg:l(8488).Z,alt:"HeyVL Logo",description:a.createElement(a.Fragment,null,"Caesar is built on our novel quantitative intermediate verification language ",a.createElement("i",null,"HeyVL"),". ",a.createElement("br",null),a.createElement(r.Z,{to:"/docs/publications#oopsla-23"},"See our OOPSLA '23 paper!")),invertDark:!0},{title:"A Collaborative Effort",Svg:l(4826).Z,alt:"i2 Logo",description:a.createElement(a.Fragment,null,"Caesar is an open-source project from the ",a.createElement(r.Z,{to:"https://moves.rwth-aachen.de/"},"MOVES group")," at ",a.createElement(r.Z,{to:"https://rwth-aachen.de"},"RWTH Aachen University"),", the ",a.createElement(r.Z,{to:"https://quave.cs.uni-saarland.de/"},"QUAVE group")," at ",a.createElement(r.Z,{to:"https://www.uni-saarland.de/"},"University of Saarland")," and the ",a.createElement(r.Z,{to:"https://www.compute.dtu.dk/english/research/research-sections/software-systems-engineering"},"SSE section")," at ",a.createElement(r.Z,{to:"https://www.dtu.dk/english/"},"Denmark Technical University")," (DTU)."),invertDark:!1}];function m(e){let{title:t,Svg:l,alt:r,description:c,invertDark:i}=e;const o=i?`${s.featureSvg} ${s.invertDark}`:s.featureSvg;return a.createElement("div",{className:(0,n.Z)("col col--4")},a.createElement("div",{className:"text--center"},a.createElement(l,{className:o,role:"img",alt:r})),a.createElement("div",{className:"text--center padding-horiz--md"},a.createElement("h3",null,t),a.createElement("p",null,c)))}function u(){return a.createElement("section",{className:s.features},a.createElement("div",{className:"container"},a.createElement("div",{className:"row"},v.map(((e,t)=>a.createElement(m,(0,o.Z)({key:t},e))))),a.createElement("hr",{style:{marginTop:"2.5em",marginBottom:"2.5em"}}),a.createElement("div",{className:"row"},a.createElement("div",{className:"col col--12"},a.createElement("h2",null,"Quick Start: Lossy List Traversal"),a.createElement("p",null,"Let's look at a program that traverses a list but has a chance of crashing during the traversal. We'll verify that the crash probability is at least 50% if the list has length 1."),a.createElement("p",null,"We explain more of the details ",a.createElement(r.Z,{to:"/docs/getting-started/verifying-heyvl"},"as part of our getting started guide"),"."))),a.createElement("div",{className:"row"},a.createElement("div",{className:"col col--6"},a.createElement("h3",null,"\ud83d\udca5 ",a.createElement("code",null,"lossy_list")," Procedure"),a.createElement("p",null,"This ",a.createElement(r.Z,{to:"docs/heyvl/procs"},"procedure")," is the entry point. It has one output, the resulting list ",a.createElement("code",null,"l"),". In the body of ",a.createElement("code",null,"lossy_list"),", we traverse the list by repeatedly removing the first element using ",a.createElement("code",null,"pop"),". We model a 50% chance of crashing by a coin flip (",a.createElement("code",null,"flip(0.5)"),") leading to ",a.createElement("code",null,"assert [false]"),"."),a.createElement(h.Z,{language:"heyvl"},"proc lossy_list(init_l: List) -> (l: List)\n    pre [len(init_l) == 1] * 0.5  // quantitative specification!\n    post [true]\n{\n    l = init_l\n    @invariant(exp(0.5, len(l)))\n    while len(l) > 0 {\n        var prob_choice: Bool = flip(0.5) // coin flip\n        if prob_choice {\n            l = pop(l)     // next list element\n        } else {\n            assert [false] // crash\n        }\n    }\n}\n")),a.createElement("div",{className:"col col--6"},a.createElement("h3",null,"\ud83c\udf0d Axiomatizing Exponentials and Lists"),a.createElement("p",null,"Here is a strength of deductive verification: users can axomatize additional functions and data types that can be used for verification! We simply declare the ",a.createElement(r.Z,{to:"/docs/heyvl/domains"},"uninterpreted sort and functions")," with just the necessary axioms in HeyVL."),a.createElement(h.Z,{language:"heyvl"},"domain Exponentials {\n    func exp(base: UReal, exponent: UInt): EUReal\n\n    axiom exp_base forall base: UReal. \n      exp(base, 0) == 1\n    axiom exp_step forall base: UReal, exponent: UInt. \n      exp(base, exponent + 1) == base * exp(base, exponent)\n}\n\ndomain List {\n    func len(l: List): UInt\n    func pop(l: List): List \n\n    axiom list_len forall l: List. \n      len(pop(l)) == len(l) - 1\n}"))),a.createElement("div",{className:"row"},a.createElement("div",{className:"col col--6"},a.createElement("h3",null,"\ud83d\udcd0 Reading The Spec"),a.createElement("p",null,"Let's focus on the ",a.createElement("i",null,"quantitative specification")," of ",a.createElement("code",null,"lossy_list"),":"),a.createElement(h.Z,{language:"heyvl"},"pre [len(init_l) == 1] * 0.5\npost [true]"),a.createElement("p",null,"The ",a.createElement("code",null,"post")," says that we are looking at the expected value of ",a.createElement("code",null,"[true]")," (i.e. 1) in the final states of the program. In other words, we are interested in the probability of running without an error."),a.createElement("p",null,"The ",a.createElement("code",null,"pre")," specifies a lower bound to the probability of a run without crashing (expected value of the post ",a.createElement("code",null,"[true]"),"). It says that if the length of the list is 1, then the lower bound is ",a.createElement("code",null,"0.5")," and otherwise ",a.createElement("code",null,"0"),"."),a.createElement("p",null,"To verify the spec, the ",a.createElement("code",null,"while")," loop has an ",a.createElement("code",null,"@invariant")," annotation with a ",a.createElement(r.Z,{to:"/docs/proof-rules/induction"},"probabilistic invariant"),".")),a.createElement("div",{className:"col col--6"},a.createElement("h3",null,"\ud83c\udfc3 Running Caesar"),"After ",a.createElement(r.Z,{to:"https://www.rust-lang.org/tools/install"},"installing Rust"),", install the ",a.createElement("code",null,"caesar")," binary (",a.createElement(r.Z,{to:"/docs/getting-started"},"c.f. ",a.createElement("i",null,"Getting Started")),"):",a.createElement(h.Z,{language:"bash"},"git clone git@github.com:moves-rwth/caesar.git\ncd caesar\ncargo install --path . caesar\ncaesar tests/domains/lossy_list.heyvl"),"This will run Caesar on the example above (it is included in the Git repository). Caesar will print: ",a.createElement("code",null,"tests/domains/lossy_list.heyvl: Verified.")))))}const d={heroBanner:"heroBanner_qdFl",heroBannerRow:"heroBannerRow_F26w",heroLogo:"heroLogo_U6bI",buttons:"buttons_AeoN",heroImage:"heroImage_xZN7"};function p(){const{siteConfig:e}=(0,c.Z)();return a.createElement("header",{className:(0,n.Z)("hero hero--dark",d.heroBanner)},a.createElement("div",{className:"container"},a.createElement("div",{className:`row ${d.heroBannerRow}`},a.createElement("div",{className:"col col--7"},a.createElement("h1",{className:"hero__title"},a.createElement("img",{src:"/img/laurel.svg",className:d.heroLogo}),e.title,a.createElement("img",{src:"/img/laurel.svg",className:d.heroLogo,style:{transform:"scale(-1, 1)"}})),a.createElement("p",{className:"hero__subtitle"},e.tagline),a.createElement(r.Z,{className:"button button--primary button--lg",to:"/docs/getting-started"},"Get Started \u2192"),a.createElement("span",null," "),a.createElement(r.Z,{className:"button button--primary button--lg",to:"/docs/"},"Docs")),a.createElement("div",{className:"col col--5"},a.createElement(r.Z,{to:"/docs/"},a.createElement("img",{src:"img/architecture-oopsla23.svg",className:`padding--md shadow--md ${d.heroImage}`}))))))}function f(){const{siteConfig:e}=(0,c.Z)();return a.createElement(i.Z,{title:"Caesar Verification Infrastructure",description:`${e.tagline}`},a.createElement(p,null),a.createElement("main",null,a.createElement(u,null)))}}}]);